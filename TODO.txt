=================================================================================
BUGS:

statusBar text not being updated again
HasFocus() should ask for mainwindow's focus
channelList suspends drawing everything
privmsg from ***

=================================================================================

set Timeout, Name, QuitMessage, etc...
---------------------------------------------------------------------------------
/disconnect
/reconnect
go retryConnect never stops if the server tab was closed
---------------------------------------------------------------------------------
autoscroll to bottom but don't if we scrolled up on purpose (<-time.After)
---------------------------------------------------------------------------------
prevent closing the last tab 
    - allow servConn.conn to be nil
    - /server doesn't open a new tab if current tab is a nil CHATBOX_SERVER

    also: CTRL+T for a new nil CHATBOX_SERVER unless one exists then just
    switch to it
    /exit to close application
---------------------------------------------------------------------------------
RICHEDIT BOYS :O :O :O GET HYPE
---------------------------------------------------------------------------------
middle-click to close tabs
scroll to cycle through tabs
context menu (close)
---------------------------------------------------------------------------------
nickflash
---------------------------------------------------------------------------------
/script external scripts:
    """
    /script script_name.py everything after /script passed as an argument

    /register script_name python script_name.py
    /script_name everything after /script passed as an argument

    python script_name.py "everything after /script passed as an argument"
    """

    print("Hello, world.")
    """
    <user> Hello, world.
---------------------------------------------------------------------------------
SEND COLORS (todo) ideas:
    \{red}
    ^red{text here}
PARSE COLORS
    - use tsobot colors.go
COLORS FOR NICKS
---------------------------------------------------------------------------------
/search or /find or CTRL+F
    reduce text buffer to matches, then restore
---------------------------------------------------------------------------------
/whois command (write to current tab)
---------------------------------------------------------------------------------
settings panel which writes to config.json
hot-loadable config.json
autogen default config.json
automatic NickServ stuff
---------------------------------------------------------------------------------
limit message history (configurable)
---------------------------------------------------------------------------------
don't log messages if offline
---------------------------------------------------------------------------------
count(nicklist)
hide/show nicklist
---------------------------------------------------------------------------------
inline NOTICEs
---------------------------------------------------------------------------------
system tray
---------------------------------------------------------------------------------
topic widget should allow input and send /topic or whatever
---------------------------------------------------------------------------------
\n at beginning of chatbox.printMessage unless chatbox is empty
---------------------------------------------------------------------------------
split extra long text input, allow ctrl+enter, split on \n
---------------------------------------------------------------------------------

channel list parsing don't rely on goirc.Client Args array...
    it uses strings.Fields() which is too clever for its own good
    use strings.Split(l.Raw, " ") instead...

2018/07/05 04:19:13 strconv.Atoi: parsing "is": invalid syntax
2018/07/05 04:19:13 &client.Line{
    Tags:  {},
    Nick:  "",
    Ident: "",
    Host:  "magnet.rizon.net",
    Src:   "magnet.rizon.net",
    Cmd:   "322",
    Raw:   ":magnet.rizon.net 322 tso|chopsuey #this\u3000is\u3000the\u3000greatest\u3000channel 3 :[+ntz] this\u3000is\u3000the\u3000greatest\u3000channel ",
    Args:  {"tso|chopsuey", "#this", "is", "the", "greatest", "channel", "3", "[+ntz] this\u3000is\u3000the\u3000greatest\u3000channel "},
    Time:  time.Time{},
}
2018/07/05 04:19:13 strconv.Atoi: parsing "has": invalid syntax
2018/07/05 04:19:13 &client.Line{
    Tags:  {},
    Nick:  "",
    Ident: "",
    Host:  "magnet.rizon.net",
    Src:   "magnet.rizon.net",
    Cmd:   "322",
    Raw:   ":magnet.rizon.net 322 tso|chopsuey #Glaceon\u2005has\u2005the\u2005best\u2005paws.\u2005:3 1 :[+nt] ",
    Args:  {"tso|chopsuey", "#Glaceon", "has", "the", "best", "paws.", ":3", "1", "[+nt] "},
    Time:  time.Time{},
}
2018/07/05 04:19:14 strconv.Atoi: parsing "≖‿≖）": invalid syntax
2018/07/05 04:19:14 &client.Line{
    Tags:  {},
    Nick:  "",
    Ident: "",
    Host:  "magnet.rizon.net",
    Src:   "magnet.rizon.net",
    Cmd:   "322",
    Raw:   ":magnet.rizon.net 322 tso|chopsuey #（\u3000≖‿≖） 2 :[+nt] Technology （≖‿≖ (≖‿≖ （≖‿≖ （≖‿≖ （≖‿≖） ≖‿≖） ≖‿≖）\u3000≖‿≖）\u3000≖‿≖）",
    Args:  {"tso|chopsuey", "#（", "≖‿≖）", "2", "[+nt] Technology （≖‿≖ (≖‿≖ （≖‿≖ （≖‿≖ （≖‿≖） ≖‿≖） ≖‿≖）\u3000≖‿≖）\u3000≖‿≖）"},
    Time:  time.Time{},
}
2018/07/05 04:19:16 strconv.Atoi: parsing "◡": invalid syntax
2018/07/05 04:19:16 &client.Line{
    Tags:  {},
    Nick:  "",
    Ident: "",
    Host:  "magnet.rizon.net",
    Src:   "magnet.rizon.net",
    Cmd:   "322",
    Raw:   ":magnet.rizon.net 322 tso|chopsuey #◔\u2008◡\u2008◔ 1 :[+nt] ",
    Args:  {"tso|chopsuey", "#◔", "◡", "◔", "1", "[+nt] "},
    Time:  time.Time{},
}
2018/07/05 04:19:18 strconv.Atoi: parsing "ｃｈａｎｎｅｌ": invalid syntax
2018/07/05 04:19:18 &client.Line{
    Tags:  {},
    Nick:  "",
    Ident: "",
    Host:  "magnet.rizon.net",
    Src:   "magnet.rizon.net",
    Cmd:   "322",
    Raw:   ":magnet.rizon.net 322 tso|chopsuey #ｓｅｃｒｅｔ\u2007ｃｈａｎｎｅｌ 1 :[+nt] ",
    Args:  {"tso|chopsuey", "#ｓｅｃｒｅｔ", "ｃｈａｎｎｅｌ", "1", "[+nt] "},
    Time:  time.Time{},
}
---------------------------------------------------------------------------------
/ignore
